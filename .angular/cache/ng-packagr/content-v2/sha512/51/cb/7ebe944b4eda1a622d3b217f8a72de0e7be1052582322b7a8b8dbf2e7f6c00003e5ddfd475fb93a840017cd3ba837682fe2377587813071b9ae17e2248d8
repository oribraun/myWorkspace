{"hash":"ab71e28cb69cd8e46255cad4e5a134e3fe700f45","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\n\nclass AngularInfinityScrollDirective {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.scrolledDown = new EventEmitter();\r\n        this.scrolledUp = new EventEmitter();\r\n        this.scrolledLeft = new EventEmitter();\r\n        this.scrolledRight = new EventEmitter();\r\n        this.lastScrollDirection = 0;\r\n        this.lastScrollDirectionHorizontal = 0;\r\n        this.triggeredUp = false;\r\n        this.triggeredDown = false;\r\n        this.triggeredLeft = false;\r\n        this.triggeredRight = false;\r\n        this.mouseDown = false;\r\n        this.mouseDownPos = false;\r\n        this.lastScrollPos = 0;\r\n        this.scrollDirection = 0;\r\n        this.isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n        this.isSafari = navigator.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.userAgent.toLowerCase().indexOf('chrome') === -1;\r\n        this.stopEventForFirefox = false;\r\n        this.keyUpDownPressed = false;\r\n    }\r\n    ngOnInit() {\r\n        this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n        this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n        this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n        this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n        this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n        this.lastScrollTop = this.elementCurrentScrollTop;\r\n        this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n        if (!this.angularInfinityScrollDownDistance) {\r\n            this.angularInfinityScrollDownDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollUpDistance) {\r\n            this.angularInfinityScrollUpDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollLeftDistance) {\r\n            this.angularInfinityScrollLeftDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollRightDistance) {\r\n            this.angularInfinityScrollRightDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollDisabled) {\r\n            this.angularInfinityScrollDisabled = false;\r\n        }\r\n        // console.log('directive works', this.elementCurrentScrollTop);\r\n        // this.scrolledDown.emit()\r\n        // this.scrolledUp.emit()\r\n        this.element.nativeElement.setAttribute('tabIndex', 0);\r\n    }\r\n    ngOnChanges(changes) {\r\n    }\r\n    // @HostListener('mousedown', ['$event'])\r\n    // mousedown(e) {\r\n    //   this.mouseDown = true;\r\n    // }\r\n    // @HostListener('document:mouseup', ['$event'])\r\n    // mouseup(e) {\r\n    //   if (this.mouseDown) {\r\n    //     this.mouseDown = false;\r\n    //   }\r\n    // }\r\n    onMouseDown(event) {\r\n        this.mouseDown = true;\r\n        this.mouseDownPos = this.getPointerPos(event, false);\r\n        this.lastScrollPos = this.element.nativeElement.scrollTop;\r\n        this.lastScrollLeft = this.element.nativeElement.scrollLeft;\r\n    }\r\n    onKeyPress(e) {\r\n        if (e.keyCode === 34 || e.keyCode === 33 || e.key === 'PageDown' || e.key === 'PageUp') {\r\n            if (e.key === 'PageDown') {\r\n                this.scrollDirection = 1;\r\n            }\r\n            else if (e.key === 'PageUp') {\r\n                this.scrollDirection = -1;\r\n            }\r\n            this.handleScroll();\r\n        }\r\n    }\r\n    onMouseUp(event) {\r\n        if (this.mouseDown) {\r\n            this.mouseDown = false;\r\n        }\r\n    }\r\n    handleWheelEvent(event) {\r\n        // if (this.isFirefox) {\r\n        this.scrollDirection = event.deltaY;\r\n        // console.log('asdf', event.webkitDirectionInvertedFromDevice)\r\n        // console.log('asdf', event)\r\n        this.handleScroll();\r\n        // }\r\n    }\r\n    onScroll(e) {\r\n        if (this.isSafari) {\r\n            return;\r\n        }\r\n        if (this.keyUpDownPressed) {\r\n            // this.keyUpDownPressed = false;\r\n            // this.scrollDirection = 0;\r\n            // this.scrollDirection = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n            // this.handleScroll();\r\n        }\r\n        if (this.mouseDown) {\r\n            // const direction = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n            // this.scrollDirection  = direction;\r\n            this.scrollDirection = 0;\r\n            this.handleScroll();\r\n        }\r\n        if (!this.isFirefox) {\r\n            // this.handleScroll();\r\n        }\r\n    }\r\n    handleScroll() {\r\n        setTimeout(() => {\r\n            this.angularInfinityScrollDisabled = false;\r\n        });\r\n        if (!this.angularInfinityScrollDisabled) {\r\n            this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n            this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n            this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n            this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n            this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n            this.elementCurrentScrollLeft = this.element.nativeElement.scrollLeft;\r\n            if (this.triggeredUp || this.triggeredDown) {\r\n                this.lastScrollTop = this.elementCurrentScrollTop;\r\n                if (this.triggeredUp) {\r\n                    this.triggeredUp = false;\r\n                }\r\n                if (this.triggeredDown) {\r\n                    this.triggeredDown = false;\r\n                }\r\n                if (this.triggeredLeft) {\r\n                    this.triggeredLeft = false;\r\n                }\r\n                if (this.triggeredRight) {\r\n                    this.triggeredRight = false;\r\n                }\r\n            }\r\n            let scrollDirection = this.elementCurrentScrollTop - this.lastScrollTop;\r\n            let scrollDirectionHorizontal = this.elementCurrentScrollLeft - this.lastScrollLeft;\r\n            // console.log('scrollDirectionHorizontal', scrollDirectionHorizontal)\r\n            if (!scrollDirection) {\r\n                scrollDirection = this.lastScrollDirection;\r\n            }\r\n            if (!scrollDirectionHorizontal) {\r\n                scrollDirectionHorizontal = this.lastScrollDirectionHorizontal;\r\n            }\r\n            if (this.scrollDirection) {\r\n                scrollDirection = this.scrollDirection;\r\n            }\r\n            this.lastScrollDirection = scrollDirection;\r\n            this.lastScrollDirectionHorizontal = scrollDirectionHorizontal;\r\n            // console.log('scrollDirection', scrollDirection)\r\n            this.lastScrollTop = this.elementCurrentScrollTop;\r\n            this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n            const distanceFromBottom = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollDownDistance / 100);\r\n            const distanceFromUp = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollUpDistance / 100);\r\n            const distanceFromLeft = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollLeftDistance / 100);\r\n            const distanceFromRight = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollRightDistance / 100);\r\n            // console.log('(this.elementScrollHeight - this.elementClientHeight)', (this.elementScrollHeight - this.elementClientHeight));\r\n            // console.log('scrollDirection', scrollDirection);\r\n            // console.log('distanceFromBottom', distanceFromBottom);\r\n            // console.log('distanceFromUp', distanceFromUp);\r\n            // console.log('this.elementScrollHeight', (this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom);\r\n            // console.log('this.elementCurrentScrollTop', this.elementCurrentScrollTop);\r\n            if ((this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom <= this.elementCurrentScrollTop && scrollDirection > 0) {\r\n                this.scrolledDown.emit();\r\n                this.triggeredDown = true;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (Math.ceil(this.elementCurrentScrollTop) === (this.elementScrollHeight - this.elementClientHeight)) {\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollTop === 0) {\r\n                            this.element.nativeElement.scrollTop += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n                            // this.element.nativeElement.scrollTop -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (this.elementCurrentScrollTop <= distanceFromUp && scrollDirection < 0) {\r\n                this.scrolledUp.emit();\r\n                this.triggeredUp = true;\r\n                // this.element.nativeElement.scrollTop += 1;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (this.element.nativeElement.scrollTop === 0) {\r\n                    this.element.nativeElement.scrollTop += 1;\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollTop === 0) {\r\n                            this.element.nativeElement.scrollTop += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n                            this.element.nativeElement.scrollTop -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if ((this.elementScrollWidth - this.elementClientWidth) - distanceFromRight <= this.elementCurrentScrollLeft && scrollDirectionHorizontal > 0) {\r\n                this.scrolledRight.emit();\r\n                this.triggeredRight = true;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (Math.ceil(this.elementCurrentScrollLeft) === (this.elementScrollWidth - this.elementClientWidth)) {\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollLeft === 0) {\r\n                            this.element.nativeElement.scrollLeft += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (Math.ceil(this.elementCurrentScrollLeft) === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n                            this.element.nativeElement.scrollLeft -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (this.elementCurrentScrollLeft <= distanceFromLeft && scrollDirectionHorizontal < 0) {\r\n                this.scrolledLeft.emit();\r\n                this.triggeredLeft = true;\r\n                // this.element.nativeElement.scrollTop += 1;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (this.element.nativeElement.scrollLeft === 0) {\r\n                    this.element.nativeElement.scrollLeft += 1;\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollLeft === 0) {\r\n                            this.element.nativeElement.scrollLeft += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (this.element.nativeElement.scrollLeft === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n                            this.element.nativeElement.scrollLeft -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getPointerPos(e, preventTouch) {\r\n        let x = 0;\r\n        let y = 0;\r\n        if (e.clientX !== undefined && e.clientY !== undefined) {\r\n            x = e.clientX;\r\n            y = e.clientY;\r\n        }\r\n        else if (e.taretTouches) {\r\n            if (preventTouch) {\r\n                e.preventDefault();\r\n            }\r\n            x = e.taretTouches[0].clientX;\r\n            y = e.taretTouches[0].clientY;\r\n        }\r\n        else if (e.touches) {\r\n            if (preventTouch) {\r\n                e.preventDefault();\r\n            }\r\n            x = e.touches[0].clientX;\r\n            y = e.touches[0].clientY;\r\n        }\r\n        return {\r\n            x,\r\n            y\r\n        };\r\n    }\r\n}\r\nAngularInfinityScrollDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nAngularInfinityScrollDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: AngularInfinityScrollDirective, selector: \"[angularInfinityScroll]\", inputs: { angularInfinityScroll: \"angularInfinityScroll\", angularInfinityScrollDownDistance: \"angularInfinityScrollDownDistance\", angularInfinityScrollUpDistance: \"angularInfinityScrollUpDistance\", angularInfinityScrollLeftDistance: \"angularInfinityScrollLeftDistance\", angularInfinityScrollRightDistance: \"angularInfinityScrollRightDistance\", angularInfinityScrollDisabled: \"angularInfinityScrollDisabled\" }, outputs: { scrolledDown: \"scrolledDown\", scrolledUp: \"scrolledUp\", scrolledLeft: \"scrolledLeft\", scrolledRight: \"scrolledRight\" }, host: { listeners: { \"mousedown\": \"onMouseDown($event)\", \"touchstart\": \"onMouseDown($event)\", \"keydown\": \"onKeyPress($event)\", \"window:mouseup\": \"onMouseUp($event)\", \"window:touchend\": \"onMouseUp($event)\", \"wheel\": \"handleWheelEvent($event)\", \"scroll\": \"onScroll($event)\" } }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[angularInfinityScroll]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { angularInfinityScroll: [{\r\n                type: Input\r\n            }], angularInfinityScrollDownDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollUpDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollLeftDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollRightDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollDisabled: [{\r\n                type: Input\r\n            }], scrolledDown: [{\r\n                type: Output\r\n            }], scrolledUp: [{\r\n                type: Output\r\n            }], scrolledLeft: [{\r\n                type: Output\r\n            }], scrolledRight: [{\r\n                type: Output\r\n            }], onMouseDown: [{\r\n                type: HostListener,\r\n                args: ['mousedown', ['$event']]\r\n            }, {\r\n                type: HostListener,\r\n                args: ['touchstart', ['$event']]\r\n            }], onKeyPress: [{\r\n                type: HostListener,\r\n                args: ['keydown', ['$event']]\r\n            }], onMouseUp: [{\r\n                type: HostListener,\r\n                args: ['window:mouseup', ['$event']]\r\n            }, {\r\n                type: HostListener,\r\n                args: ['window:touchend', ['$event']]\r\n            }], handleWheelEvent: [{\r\n                type: HostListener,\r\n                args: ['wheel', ['$event']]\r\n            }], onScroll: [{\r\n                type: HostListener,\r\n                args: ['scroll', ['$event']]\r\n            }] } });\n\nclass AngularInfinityScrollModule {\r\n}\r\nAngularInfinityScrollModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nAngularInfinityScrollModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule, declarations: [AngularInfinityScrollDirective], exports: [AngularInfinityScrollDirective] });\r\nAngularInfinityScrollModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        AngularInfinityScrollDirective\r\n                    ],\r\n                    exports: [AngularInfinityScrollDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of angular-infinity-scroll\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AngularInfinityScrollDirective, AngularInfinityScrollModule };\n//# sourceMappingURL=angular-infinity-scroll.mjs.map\n","map":{"version":3,"file":"angular-infinity-scroll.mjs","sources":["../../../projects/angular-infinity-scroll/src/lib/angular-infinity-scroll.directive.ts","../../../projects/angular-infinity-scroll/src/lib/angular-infinity-scroll.module.ts","../../../projects/angular-infinity-scroll/src/public-api.ts","../../../projects/angular-infinity-scroll/src/angular-infinity-scroll.ts"],"sourcesContent":["import {Directive, Input, OnInit, Output, EventEmitter, ElementRef, HostListener, OnChanges, SimpleChanges} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[angularInfinityScroll]'\r\n})\r\nexport class AngularInfinityScrollDirective implements OnInit, OnChanges {\r\n\r\n  @Input() angularInfinityScroll: string;\r\n  @Input() angularInfinityScrollDownDistance: number;\r\n  @Input() angularInfinityScrollUpDistance: number;\r\n  @Input() angularInfinityScrollLeftDistance: number;\r\n  @Input() angularInfinityScrollRightDistance: number;\r\n  // @Input() angularInfinityScrollThrottle: number;\r\n  @Input() angularInfinityScrollDisabled: boolean;\r\n  @Output() scrolledDown = new EventEmitter();\r\n  @Output() scrolledUp = new EventEmitter();\r\n  @Output() scrolledLeft = new EventEmitter();\r\n  @Output() scrolledRight = new EventEmitter();\r\n\r\n  private elementScrollHeight;\r\n  private elementClientHeight;\r\n  private elementScrollWidth;\r\n  private elementClientWidth;\r\n  private elementCurrentScrollTop;\r\n  private elementCurrentScrollLeft;\r\n  private lastScrollTop: number;\r\n  private lastScrollLeft: number;\r\n  private lastScrollDirection = 0;\r\n  private lastScrollDirectionHorizontal = 0;\r\n  private triggeredUp = false;\r\n  private triggeredDown = false;\r\n  private triggeredLeft = false;\r\n  private triggeredRight = false;\r\n  private mouseDown = false;\r\n  private mouseDownPos: any = false;\r\n  private lastScrollPos = 0;\r\n  private scrollDirection = 0;\r\n  private isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  private isSafari = navigator.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.userAgent.toLowerCase().indexOf('chrome') === -1;\r\n  private stopEventForFirefox = false;\r\n  private keyUpDownPressed = false;\r\n  constructor(\r\n    private element: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n    this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n    this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n    this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n    this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n    this.lastScrollTop = this.elementCurrentScrollTop;\r\n    this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n    if (!this.angularInfinityScrollDownDistance) {\r\n      this.angularInfinityScrollDownDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollUpDistance) {\r\n      this.angularInfinityScrollUpDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollLeftDistance) {\r\n      this.angularInfinityScrollLeftDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollRightDistance) {\r\n      this.angularInfinityScrollRightDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollDisabled) {\r\n      this.angularInfinityScrollDisabled = false;\r\n    }\r\n    // console.log('directive works', this.elementCurrentScrollTop);\r\n\r\n    // this.scrolledDown.emit()\r\n    // this.scrolledUp.emit()\r\n    this.element.nativeElement.setAttribute('tabIndex', 0);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n  }\r\n\r\n  // @HostListener('mousedown', ['$event'])\r\n  // mousedown(e) {\r\n  //   this.mouseDown = true;\r\n  // }\r\n\r\n  // @HostListener('document:mouseup', ['$event'])\r\n  // mouseup(e) {\r\n  //   if (this.mouseDown) {\r\n  //     this.mouseDown = false;\r\n  //   }\r\n  // }\r\n  @HostListener('mousedown', ['$event'])\r\n  @HostListener('touchstart', ['$event'])\r\n  onMouseDown(event): void {\r\n    this.mouseDown = true;\r\n    this.mouseDownPos = this.getPointerPos(event, false);\r\n    this.lastScrollPos = this.element.nativeElement.scrollTop;\r\n    this.lastScrollLeft = this.element.nativeElement.scrollLeft;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyPress(e): void {\r\n    if (e.keyCode === 34 || e.keyCode === 33 || e.key === 'PageDown' || e.key === 'PageUp') {\r\n      if (e.key === 'PageDown') {\r\n        this.scrollDirection = 1;\r\n      } else if (e.key === 'PageUp') {\r\n        this.scrollDirection = -1;\r\n      }\r\n      this.handleScroll();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  @HostListener('window:touchend', ['$event'])\r\n  onMouseUp(event): void {\r\n    if (this.mouseDown) {\r\n      this.mouseDown = false;\r\n    }\r\n  }\r\n  @HostListener('wheel', ['$event'])\r\n  handleWheelEvent(event): void {\r\n    // if (this.isFirefox) {\r\n    this.scrollDirection = event.deltaY;\r\n    // console.log('asdf', event.webkitDirectionInvertedFromDevice)\r\n    // console.log('asdf', event)\r\n    this.handleScroll();\r\n    // }\r\n  }\r\n  @HostListener('scroll', ['$event'])\r\n  onScroll(e): void {\r\n    if (this.isSafari) {\r\n      return;\r\n    }\r\n    if (this.keyUpDownPressed) {\r\n      // this.keyUpDownPressed = false;\r\n      // this.scrollDirection = 0;\r\n      // this.scrollDirection = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n      // this.handleScroll();\r\n    }\r\n    if (this.mouseDown) {\r\n      // const direction = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n      // this.scrollDirection  = direction;\r\n      this.scrollDirection = 0;\r\n      this.handleScroll();\r\n    }\r\n    if (!this.isFirefox) {\r\n      // this.handleScroll();\r\n    }\r\n  }\r\n\r\n  handleScroll(): void {\r\n    setTimeout(() => {\r\n      this.angularInfinityScrollDisabled = false;\r\n    });\r\n    if (!this.angularInfinityScrollDisabled) {\r\n      this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n      this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n      this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n      this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n      this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n      this.elementCurrentScrollLeft = this.element.nativeElement.scrollLeft;\r\n      if (this.triggeredUp || this.triggeredDown) {\r\n        this.lastScrollTop = this.elementCurrentScrollTop;\r\n        if (this.triggeredUp) {\r\n          this.triggeredUp = false;\r\n        }\r\n        if (this.triggeredDown) {\r\n          this.triggeredDown = false;\r\n        }\r\n        if (this.triggeredLeft) {\r\n          this.triggeredLeft = false;\r\n        }\r\n        if (this.triggeredRight) {\r\n          this.triggeredRight = false;\r\n        }\r\n      }\r\n      let scrollDirection = this.elementCurrentScrollTop - this.lastScrollTop;\r\n      let scrollDirectionHorizontal = this.elementCurrentScrollLeft - this.lastScrollLeft;\r\n      // console.log('scrollDirectionHorizontal', scrollDirectionHorizontal)\r\n      if (!scrollDirection) {\r\n        scrollDirection = this.lastScrollDirection;\r\n      }\r\n      if (!scrollDirectionHorizontal) {\r\n        scrollDirectionHorizontal = this.lastScrollDirectionHorizontal;\r\n      }\r\n      if (this.scrollDirection) {\r\n        scrollDirection = this.scrollDirection;\r\n      }\r\n      this.lastScrollDirection = scrollDirection;\r\n      this.lastScrollDirectionHorizontal = scrollDirectionHorizontal;\r\n      // console.log('scrollDirection', scrollDirection)\r\n      this.lastScrollTop = this.elementCurrentScrollTop;\r\n      this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n      const distanceFromBottom = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollDownDistance / 100);\r\n      const distanceFromUp = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollUpDistance / 100);\r\n      const distanceFromLeft = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollLeftDistance / 100);\r\n      const distanceFromRight = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollRightDistance / 100);\r\n\r\n      // console.log('(this.elementScrollHeight - this.elementClientHeight)', (this.elementScrollHeight - this.elementClientHeight));\r\n      // console.log('scrollDirection', scrollDirection);\r\n      // console.log('distanceFromBottom', distanceFromBottom);\r\n      // console.log('distanceFromUp', distanceFromUp);\r\n      // console.log('this.elementScrollHeight', (this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom);\r\n      // console.log('this.elementCurrentScrollTop', this.elementCurrentScrollTop);\r\n      if ((this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom <= this.elementCurrentScrollTop && scrollDirection > 0) {\r\n        this.scrolledDown.emit();\r\n        this.triggeredDown = true;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (Math.ceil(this.elementCurrentScrollTop) === (this.elementScrollHeight - this.elementClientHeight)) {\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollTop === 0) {\r\n              this.element.nativeElement.scrollTop += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n              // this.element.nativeElement.scrollTop -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if (this.elementCurrentScrollTop <= distanceFromUp && scrollDirection < 0) {\r\n        this.scrolledUp.emit();\r\n        this.triggeredUp = true;\r\n        // this.element.nativeElement.scrollTop += 1;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (this.element.nativeElement.scrollTop === 0) {\r\n          this.element.nativeElement.scrollTop += 1;\r\n          // this.angularInfinityScrollDisabled = true;\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollTop === 0) {\r\n              this.element.nativeElement.scrollTop += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n              this.element.nativeElement.scrollTop -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if ((this.elementScrollWidth - this.elementClientWidth) - distanceFromRight <= this.elementCurrentScrollLeft && scrollDirectionHorizontal > 0) {\r\n        this.scrolledRight.emit();\r\n        this.triggeredRight = true;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (Math.ceil(this.elementCurrentScrollLeft) === (this.elementScrollWidth - this.elementClientWidth)) {\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollLeft === 0) {\r\n              this.element.nativeElement.scrollLeft += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (Math.ceil(this.elementCurrentScrollLeft) === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n              this.element.nativeElement.scrollLeft -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if (this.elementCurrentScrollLeft <= distanceFromLeft && scrollDirectionHorizontal < 0) {\r\n        this.scrolledLeft.emit();\r\n        this.triggeredLeft = true;\r\n        // this.element.nativeElement.scrollTop += 1;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (this.element.nativeElement.scrollLeft === 0) {\r\n          this.element.nativeElement.scrollLeft += 1;\r\n          // this.angularInfinityScrollDisabled = true;\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollLeft === 0) {\r\n              this.element.nativeElement.scrollLeft += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (this.element.nativeElement.scrollLeft === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n              this.element.nativeElement.scrollLeft -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getPointerPos(e: any, preventTouch): any {\r\n    let x = 0;\r\n    let y = 0;\r\n    if (e.clientX !== undefined && e.clientY !== undefined) {\r\n      x = e.clientX;\r\n      y = e.clientY;\r\n    } else if (e.taretTouches) {\r\n      if (preventTouch) {\r\n        e.preventDefault();\r\n      }\r\n      x = e.taretTouches[0].clientX;\r\n      y = e.taretTouches[0].clientY;\r\n    } else if (e.touches) {\r\n      if (preventTouch) {\r\n        e.preventDefault();\r\n      }\r\n      x = e.touches[0].clientX;\r\n      y = e.touches[0].clientY;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { AngularInfinityScrollDirective } from './angular-infinity-scroll.directive';\n\n\n\n@NgModule({\n  declarations: [\n    AngularInfinityScrollDirective\n  ],\n  exports: [AngularInfinityScrollDirective]\n})\nexport class AngularInfinityScrollModule { }\n","/*\n * Public API Surface of angular-infinity-scroll\n */\n\nexport * from './lib/angular-infinity-scroll.module';\nexport * from './lib/angular-infinity-scroll.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\n\nclass AngularInfinityScrollDirective {\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.scrolledDown = new EventEmitter();\r\n        this.scrolledUp = new EventEmitter();\r\n        this.scrolledLeft = new EventEmitter();\r\n        this.scrolledRight = new EventEmitter();\r\n        this.lastScrollDirection = 0;\r\n        this.lastScrollDirectionHorizontal = 0;\r\n        this.triggeredUp = false;\r\n        this.triggeredDown = false;\r\n        this.triggeredLeft = false;\r\n        this.triggeredRight = false;\r\n        this.mouseDown = false;\r\n        this.mouseDownPos = false;\r\n        this.lastScrollPos = 0;\r\n        this.scrollDirection = 0;\r\n        this.isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n        this.isSafari = navigator.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.userAgent.toLowerCase().indexOf('chrome') === -1;\r\n        this.stopEventForFirefox = false;\r\n        this.keyUpDownPressed = false;\r\n    }\r\n    ngOnInit() {\r\n        this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n        this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n        this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n        this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n        this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n        this.lastScrollTop = this.elementCurrentScrollTop;\r\n        this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n        if (!this.angularInfinityScrollDownDistance) {\r\n            this.angularInfinityScrollDownDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollUpDistance) {\r\n            this.angularInfinityScrollUpDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollLeftDistance) {\r\n            this.angularInfinityScrollLeftDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollRightDistance) {\r\n            this.angularInfinityScrollRightDistance = 1.5;\r\n        }\r\n        if (!this.angularInfinityScrollDisabled) {\r\n            this.angularInfinityScrollDisabled = false;\r\n        }\r\n        // console.log('directive works', this.elementCurrentScrollTop);\r\n        // this.scrolledDown.emit()\r\n        // this.scrolledUp.emit()\r\n        this.element.nativeElement.setAttribute('tabIndex', 0);\r\n    }\r\n    ngOnChanges(changes) {\r\n    }\r\n    // @HostListener('mousedown', ['$event'])\r\n    // mousedown(e) {\r\n    //   this.mouseDown = true;\r\n    // }\r\n    // @HostListener('document:mouseup', ['$event'])\r\n    // mouseup(e) {\r\n    //   if (this.mouseDown) {\r\n    //     this.mouseDown = false;\r\n    //   }\r\n    // }\r\n    onMouseDown(event) {\r\n        this.mouseDown = true;\r\n        this.mouseDownPos = this.getPointerPos(event, false);\r\n        this.lastScrollPos = this.element.nativeElement.scrollTop;\r\n        this.lastScrollLeft = this.element.nativeElement.scrollLeft;\r\n    }\r\n    onKeyPress(e) {\r\n        if (e.keyCode === 34 || e.keyCode === 33 || e.key === 'PageDown' || e.key === 'PageUp') {\r\n            if (e.key === 'PageDown') {\r\n                this.scrollDirection = 1;\r\n            }\r\n            else if (e.key === 'PageUp') {\r\n                this.scrollDirection = -1;\r\n            }\r\n            this.handleScroll();\r\n        }\r\n    }\r\n    onMouseUp(event) {\r\n        if (this.mouseDown) {\r\n            this.mouseDown = false;\r\n        }\r\n    }\r\n    handleWheelEvent(event) {\r\n        // if (this.isFirefox) {\r\n        this.scrollDirection = event.deltaY;\r\n        // console.log('asdf', event.webkitDirectionInvertedFromDevice)\r\n        // console.log('asdf', event)\r\n        this.handleScroll();\r\n        // }\r\n    }\r\n    onScroll(e) {\r\n        if (this.isSafari) {\r\n            return;\r\n        }\r\n        if (this.keyUpDownPressed) {\r\n            // this.keyUpDownPressed = false;\r\n            // this.scrollDirection = 0;\r\n            // this.scrollDirection = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n            // this.handleScroll();\r\n        }\r\n        if (this.mouseDown) {\r\n            // const direction = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n            // this.scrollDirection  = direction;\r\n            this.scrollDirection = 0;\r\n            this.handleScroll();\r\n        }\r\n        if (!this.isFirefox) {\r\n            // this.handleScroll();\r\n        }\r\n    }\r\n    handleScroll() {\r\n        setTimeout(() => {\r\n            this.angularInfinityScrollDisabled = false;\r\n        });\r\n        if (!this.angularInfinityScrollDisabled) {\r\n            this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n            this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n            this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n            this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n            this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n            this.elementCurrentScrollLeft = this.element.nativeElement.scrollLeft;\r\n            if (this.triggeredUp || this.triggeredDown) {\r\n                this.lastScrollTop = this.elementCurrentScrollTop;\r\n                if (this.triggeredUp) {\r\n                    this.triggeredUp = false;\r\n                }\r\n                if (this.triggeredDown) {\r\n                    this.triggeredDown = false;\r\n                }\r\n                if (this.triggeredLeft) {\r\n                    this.triggeredLeft = false;\r\n                }\r\n                if (this.triggeredRight) {\r\n                    this.triggeredRight = false;\r\n                }\r\n            }\r\n            let scrollDirection = this.elementCurrentScrollTop - this.lastScrollTop;\r\n            let scrollDirectionHorizontal = this.elementCurrentScrollLeft - this.lastScrollLeft;\r\n            // console.log('scrollDirectionHorizontal', scrollDirectionHorizontal)\r\n            if (!scrollDirection) {\r\n                scrollDirection = this.lastScrollDirection;\r\n            }\r\n            if (!scrollDirectionHorizontal) {\r\n                scrollDirectionHorizontal = this.lastScrollDirectionHorizontal;\r\n            }\r\n            if (this.scrollDirection) {\r\n                scrollDirection = this.scrollDirection;\r\n            }\r\n            this.lastScrollDirection = scrollDirection;\r\n            this.lastScrollDirectionHorizontal = scrollDirectionHorizontal;\r\n            // console.log('scrollDirection', scrollDirection)\r\n            this.lastScrollTop = this.elementCurrentScrollTop;\r\n            this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n            const distanceFromBottom = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollDownDistance / 100);\r\n            const distanceFromUp = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollUpDistance / 100);\r\n            const distanceFromLeft = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollLeftDistance / 100);\r\n            const distanceFromRight = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollRightDistance / 100);\r\n            // console.log('(this.elementScrollHeight - this.elementClientHeight)', (this.elementScrollHeight - this.elementClientHeight));\r\n            // console.log('scrollDirection', scrollDirection);\r\n            // console.log('distanceFromBottom', distanceFromBottom);\r\n            // console.log('distanceFromUp', distanceFromUp);\r\n            // console.log('this.elementScrollHeight', (this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom);\r\n            // console.log('this.elementCurrentScrollTop', this.elementCurrentScrollTop);\r\n            if ((this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom <= this.elementCurrentScrollTop && scrollDirection > 0) {\r\n                this.scrolledDown.emit();\r\n                this.triggeredDown = true;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (Math.ceil(this.elementCurrentScrollTop) === (this.elementScrollHeight - this.elementClientHeight)) {\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollTop === 0) {\r\n                            this.element.nativeElement.scrollTop += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n                            // this.element.nativeElement.scrollTop -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (this.elementCurrentScrollTop <= distanceFromUp && scrollDirection < 0) {\r\n                this.scrolledUp.emit();\r\n                this.triggeredUp = true;\r\n                // this.element.nativeElement.scrollTop += 1;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (this.element.nativeElement.scrollTop === 0) {\r\n                    this.element.nativeElement.scrollTop += 1;\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollTop === 0) {\r\n                            this.element.nativeElement.scrollTop += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n                            this.element.nativeElement.scrollTop -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if ((this.elementScrollWidth - this.elementClientWidth) - distanceFromRight <= this.elementCurrentScrollLeft && scrollDirectionHorizontal > 0) {\r\n                this.scrolledRight.emit();\r\n                this.triggeredRight = true;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (Math.ceil(this.elementCurrentScrollLeft) === (this.elementScrollWidth - this.elementClientWidth)) {\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollLeft === 0) {\r\n                            this.element.nativeElement.scrollLeft += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (Math.ceil(this.elementCurrentScrollLeft) === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n                            this.element.nativeElement.scrollLeft -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (this.elementCurrentScrollLeft <= distanceFromLeft && scrollDirectionHorizontal < 0) {\r\n                this.scrolledLeft.emit();\r\n                this.triggeredLeft = true;\r\n                // this.element.nativeElement.scrollTop += 1;\r\n                if (!this.mouseDown) {\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                }\r\n                if (this.element.nativeElement.scrollLeft === 0) {\r\n                    this.element.nativeElement.scrollLeft += 1;\r\n                    // this.angularInfinityScrollDisabled = true;\r\n                    setTimeout(() => {\r\n                        if (this.element.nativeElement.scrollLeft === 0) {\r\n                            this.element.nativeElement.scrollLeft += 1;\r\n                            // this.angularInfinityScrollDisabled = true;\r\n                        }\r\n                        if (this.element.nativeElement.scrollLeft === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n                            this.element.nativeElement.scrollLeft -= 1;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getPointerPos(e, preventTouch) {\r\n        let x = 0;\r\n        let y = 0;\r\n        if (e.clientX !== undefined && e.clientY !== undefined) {\r\n            x = e.clientX;\r\n            y = e.clientY;\r\n        }\r\n        else if (e.taretTouches) {\r\n            if (preventTouch) {\r\n                e.preventDefault();\r\n            }\r\n            x = e.taretTouches[0].clientX;\r\n            y = e.taretTouches[0].clientY;\r\n        }\r\n        else if (e.touches) {\r\n            if (preventTouch) {\r\n                e.preventDefault();\r\n            }\r\n            x = e.touches[0].clientX;\r\n            y = e.touches[0].clientY;\r\n        }\r\n        return {\r\n            x,\r\n            y\r\n        };\r\n    }\r\n}\r\nAngularInfinityScrollDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nAngularInfinityScrollDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: AngularInfinityScrollDirective, selector: \"[angularInfinityScroll]\", inputs: { angularInfinityScroll: \"angularInfinityScroll\", angularInfinityScrollDownDistance: \"angularInfinityScrollDownDistance\", angularInfinityScrollUpDistance: \"angularInfinityScrollUpDistance\", angularInfinityScrollLeftDistance: \"angularInfinityScrollLeftDistance\", angularInfinityScrollRightDistance: \"angularInfinityScrollRightDistance\", angularInfinityScrollDisabled: \"angularInfinityScrollDisabled\" }, outputs: { scrolledDown: \"scrolledDown\", scrolledUp: \"scrolledUp\", scrolledLeft: \"scrolledLeft\", scrolledRight: \"scrolledRight\" }, host: { listeners: { \"mousedown\": \"onMouseDown($event)\", \"touchstart\": \"onMouseDown($event)\", \"keydown\": \"onKeyPress($event)\", \"window:mouseup\": \"onMouseUp($event)\", \"window:touchend\": \"onMouseUp($event)\", \"wheel\": \"handleWheelEvent($event)\", \"scroll\": \"onScroll($event)\" } }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[angularInfinityScroll]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { angularInfinityScroll: [{\r\n                type: Input\r\n            }], angularInfinityScrollDownDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollUpDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollLeftDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollRightDistance: [{\r\n                type: Input\r\n            }], angularInfinityScrollDisabled: [{\r\n                type: Input\r\n            }], scrolledDown: [{\r\n                type: Output\r\n            }], scrolledUp: [{\r\n                type: Output\r\n            }], scrolledLeft: [{\r\n                type: Output\r\n            }], scrolledRight: [{\r\n                type: Output\r\n            }], onMouseDown: [{\r\n                type: HostListener,\r\n                args: ['mousedown', ['$event']]\r\n            }, {\r\n                type: HostListener,\r\n                args: ['touchstart', ['$event']]\r\n            }], onKeyPress: [{\r\n                type: HostListener,\r\n                args: ['keydown', ['$event']]\r\n            }], onMouseUp: [{\r\n                type: HostListener,\r\n                args: ['window:mouseup', ['$event']]\r\n            }, {\r\n                type: HostListener,\r\n                args: ['window:touchend', ['$event']]\r\n            }], handleWheelEvent: [{\r\n                type: HostListener,\r\n                args: ['wheel', ['$event']]\r\n            }], onScroll: [{\r\n                type: HostListener,\r\n                args: ['scroll', ['$event']]\r\n            }] } });\n\nclass AngularInfinityScrollModule {\r\n}\r\nAngularInfinityScrollModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nAngularInfinityScrollModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule, declarations: [AngularInfinityScrollDirective], exports: [AngularInfinityScrollDirective] });\r\nAngularInfinityScrollModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AngularInfinityScrollModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        AngularInfinityScrollDirective\r\n                    ],\r\n                    exports: [AngularInfinityScrollDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of angular-infinity-scroll\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AngularInfinityScrollDirective, AngularInfinityScrollModule };\n//# sourceMappingURL=angular-infinity-scroll.mjs.map\n","map":{"version":3,"file":"angular-infinity-scroll.mjs","sources":["../../../projects/angular-infinity-scroll/src/lib/angular-infinity-scroll.directive.ts","../../../projects/angular-infinity-scroll/src/lib/angular-infinity-scroll.module.ts","../../../projects/angular-infinity-scroll/src/public-api.ts","../../../projects/angular-infinity-scroll/src/angular-infinity-scroll.ts"],"sourcesContent":["import {Directive, Input, OnInit, Output, EventEmitter, ElementRef, HostListener, OnChanges, SimpleChanges} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[angularInfinityScroll]'\r\n})\r\nexport class AngularInfinityScrollDirective implements OnInit, OnChanges {\r\n\r\n  @Input() angularInfinityScroll: string;\r\n  @Input() angularInfinityScrollDownDistance: number;\r\n  @Input() angularInfinityScrollUpDistance: number;\r\n  @Input() angularInfinityScrollLeftDistance: number;\r\n  @Input() angularInfinityScrollRightDistance: number;\r\n  // @Input() angularInfinityScrollThrottle: number;\r\n  @Input() angularInfinityScrollDisabled: boolean;\r\n  @Output() scrolledDown = new EventEmitter();\r\n  @Output() scrolledUp = new EventEmitter();\r\n  @Output() scrolledLeft = new EventEmitter();\r\n  @Output() scrolledRight = new EventEmitter();\r\n\r\n  private elementScrollHeight;\r\n  private elementClientHeight;\r\n  private elementScrollWidth;\r\n  private elementClientWidth;\r\n  private elementCurrentScrollTop;\r\n  private elementCurrentScrollLeft;\r\n  private lastScrollTop: number;\r\n  private lastScrollLeft: number;\r\n  private lastScrollDirection = 0;\r\n  private lastScrollDirectionHorizontal = 0;\r\n  private triggeredUp = false;\r\n  private triggeredDown = false;\r\n  private triggeredLeft = false;\r\n  private triggeredRight = false;\r\n  private mouseDown = false;\r\n  private mouseDownPos: any = false;\r\n  private lastScrollPos = 0;\r\n  private scrollDirection = 0;\r\n  private isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  private isSafari = navigator.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.userAgent.toLowerCase().indexOf('chrome') === -1;\r\n  private stopEventForFirefox = false;\r\n  private keyUpDownPressed = false;\r\n  constructor(\r\n    private element: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n    this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n    this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n    this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n    this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n    this.lastScrollTop = this.elementCurrentScrollTop;\r\n    this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n    if (!this.angularInfinityScrollDownDistance) {\r\n      this.angularInfinityScrollDownDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollUpDistance) {\r\n      this.angularInfinityScrollUpDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollLeftDistance) {\r\n      this.angularInfinityScrollLeftDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollRightDistance) {\r\n      this.angularInfinityScrollRightDistance = 1.5;\r\n    }\r\n    if (!this.angularInfinityScrollDisabled) {\r\n      this.angularInfinityScrollDisabled = false;\r\n    }\r\n    // console.log('directive works', this.elementCurrentScrollTop);\r\n\r\n    // this.scrolledDown.emit()\r\n    // this.scrolledUp.emit()\r\n    this.element.nativeElement.setAttribute('tabIndex', 0);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n  }\r\n\r\n  // @HostListener('mousedown', ['$event'])\r\n  // mousedown(e) {\r\n  //   this.mouseDown = true;\r\n  // }\r\n\r\n  // @HostListener('document:mouseup', ['$event'])\r\n  // mouseup(e) {\r\n  //   if (this.mouseDown) {\r\n  //     this.mouseDown = false;\r\n  //   }\r\n  // }\r\n  @HostListener('mousedown', ['$event'])\r\n  @HostListener('touchstart', ['$event'])\r\n  onMouseDown(event): void {\r\n    this.mouseDown = true;\r\n    this.mouseDownPos = this.getPointerPos(event, false);\r\n    this.lastScrollPos = this.element.nativeElement.scrollTop;\r\n    this.lastScrollLeft = this.element.nativeElement.scrollLeft;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyPress(e): void {\r\n    if (e.keyCode === 34 || e.keyCode === 33 || e.key === 'PageDown' || e.key === 'PageUp') {\r\n      if (e.key === 'PageDown') {\r\n        this.scrollDirection = 1;\r\n      } else if (e.key === 'PageUp') {\r\n        this.scrollDirection = -1;\r\n      }\r\n      this.handleScroll();\r\n    }\r\n  }\r\n\r\n  @HostListener('window:mouseup', ['$event'])\r\n  @HostListener('window:touchend', ['$event'])\r\n  onMouseUp(event): void {\r\n    if (this.mouseDown) {\r\n      this.mouseDown = false;\r\n    }\r\n  }\r\n  @HostListener('wheel', ['$event'])\r\n  handleWheelEvent(event): void {\r\n    // if (this.isFirefox) {\r\n    this.scrollDirection = event.deltaY;\r\n    // console.log('asdf', event.webkitDirectionInvertedFromDevice)\r\n    // console.log('asdf', event)\r\n    this.handleScroll();\r\n    // }\r\n  }\r\n  @HostListener('scroll', ['$event'])\r\n  onScroll(e): void {\r\n    if (this.isSafari) {\r\n      return;\r\n    }\r\n    if (this.keyUpDownPressed) {\r\n      // this.keyUpDownPressed = false;\r\n      // this.scrollDirection = 0;\r\n      // this.scrollDirection = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n      // this.handleScroll();\r\n    }\r\n    if (this.mouseDown) {\r\n      // const direction = this.element.nativeElement.scrollTop - this.lastScrollPos;\r\n      // this.scrollDirection  = direction;\r\n      this.scrollDirection = 0;\r\n      this.handleScroll();\r\n    }\r\n    if (!this.isFirefox) {\r\n      // this.handleScroll();\r\n    }\r\n  }\r\n\r\n  handleScroll(): void {\r\n    setTimeout(() => {\r\n      this.angularInfinityScrollDisabled = false;\r\n    });\r\n    if (!this.angularInfinityScrollDisabled) {\r\n      this.elementScrollHeight = this.element.nativeElement.scrollHeight;\r\n      this.elementClientHeight = this.element.nativeElement.clientHeight;\r\n      this.elementScrollWidth = this.element.nativeElement.scrollWidth;\r\n      this.elementClientWidth = this.element.nativeElement.clientWidth;\r\n      this.elementCurrentScrollTop = this.element.nativeElement.scrollTop;\r\n      this.elementCurrentScrollLeft = this.element.nativeElement.scrollLeft;\r\n      if (this.triggeredUp || this.triggeredDown) {\r\n        this.lastScrollTop = this.elementCurrentScrollTop;\r\n        if (this.triggeredUp) {\r\n          this.triggeredUp = false;\r\n        }\r\n        if (this.triggeredDown) {\r\n          this.triggeredDown = false;\r\n        }\r\n        if (this.triggeredLeft) {\r\n          this.triggeredLeft = false;\r\n        }\r\n        if (this.triggeredRight) {\r\n          this.triggeredRight = false;\r\n        }\r\n      }\r\n      let scrollDirection = this.elementCurrentScrollTop - this.lastScrollTop;\r\n      let scrollDirectionHorizontal = this.elementCurrentScrollLeft - this.lastScrollLeft;\r\n      // console.log('scrollDirectionHorizontal', scrollDirectionHorizontal)\r\n      if (!scrollDirection) {\r\n        scrollDirection = this.lastScrollDirection;\r\n      }\r\n      if (!scrollDirectionHorizontal) {\r\n        scrollDirectionHorizontal = this.lastScrollDirectionHorizontal;\r\n      }\r\n      if (this.scrollDirection) {\r\n        scrollDirection = this.scrollDirection;\r\n      }\r\n      this.lastScrollDirection = scrollDirection;\r\n      this.lastScrollDirectionHorizontal = scrollDirectionHorizontal;\r\n      // console.log('scrollDirection', scrollDirection)\r\n      this.lastScrollTop = this.elementCurrentScrollTop;\r\n      this.lastScrollLeft = this.elementCurrentScrollLeft;\r\n      const distanceFromBottom = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollDownDistance / 100);\r\n      const distanceFromUp = (this.elementScrollHeight - this.elementClientHeight) / 2 * (this.angularInfinityScrollUpDistance / 100);\r\n      const distanceFromLeft = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollLeftDistance / 100);\r\n      const distanceFromRight = (this.elementScrollWidth - this.elementClientWidth) / 2 * (this.angularInfinityScrollRightDistance / 100);\r\n\r\n      // console.log('(this.elementScrollHeight - this.elementClientHeight)', (this.elementScrollHeight - this.elementClientHeight));\r\n      // console.log('scrollDirection', scrollDirection);\r\n      // console.log('distanceFromBottom', distanceFromBottom);\r\n      // console.log('distanceFromUp', distanceFromUp);\r\n      // console.log('this.elementScrollHeight', (this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom);\r\n      // console.log('this.elementCurrentScrollTop', this.elementCurrentScrollTop);\r\n      if ((this.elementScrollHeight - this.elementClientHeight) - distanceFromBottom <= this.elementCurrentScrollTop && scrollDirection > 0) {\r\n        this.scrolledDown.emit();\r\n        this.triggeredDown = true;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (Math.ceil(this.elementCurrentScrollTop) === (this.elementScrollHeight - this.elementClientHeight)) {\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollTop === 0) {\r\n              this.element.nativeElement.scrollTop += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n              // this.element.nativeElement.scrollTop -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if (this.elementCurrentScrollTop <= distanceFromUp && scrollDirection < 0) {\r\n        this.scrolledUp.emit();\r\n        this.triggeredUp = true;\r\n        // this.element.nativeElement.scrollTop += 1;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (this.element.nativeElement.scrollTop === 0) {\r\n          this.element.nativeElement.scrollTop += 1;\r\n          // this.angularInfinityScrollDisabled = true;\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollTop === 0) {\r\n              this.element.nativeElement.scrollTop += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (this.element.nativeElement.scrollTop === (this.element.nativeElement.scrollHeight - this.element.nativeElement.clientHeight)) {\r\n              this.element.nativeElement.scrollTop -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if ((this.elementScrollWidth - this.elementClientWidth) - distanceFromRight <= this.elementCurrentScrollLeft && scrollDirectionHorizontal > 0) {\r\n        this.scrolledRight.emit();\r\n        this.triggeredRight = true;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (Math.ceil(this.elementCurrentScrollLeft) === (this.elementScrollWidth - this.elementClientWidth)) {\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollLeft === 0) {\r\n              this.element.nativeElement.scrollLeft += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (Math.ceil(this.elementCurrentScrollLeft) === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n              this.element.nativeElement.scrollLeft -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if (this.elementCurrentScrollLeft <= distanceFromLeft && scrollDirectionHorizontal < 0) {\r\n        this.scrolledLeft.emit();\r\n        this.triggeredLeft = true;\r\n        // this.element.nativeElement.scrollTop += 1;\r\n        if (!this.mouseDown) {\r\n          // this.angularInfinityScrollDisabled = true;\r\n        }\r\n        if (this.element.nativeElement.scrollLeft === 0) {\r\n          this.element.nativeElement.scrollLeft += 1;\r\n          // this.angularInfinityScrollDisabled = true;\r\n          setTimeout(() => {\r\n            if (this.element.nativeElement.scrollLeft === 0) {\r\n              this.element.nativeElement.scrollLeft += 1;\r\n              // this.angularInfinityScrollDisabled = true;\r\n            }\r\n            if (this.element.nativeElement.scrollLeft === (this.element.nativeElement.scrollWidth - this.element.nativeElement.clientWidth)) {\r\n              this.element.nativeElement.scrollLeft -= 1;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getPointerPos(e: any, preventTouch): any {\r\n    let x = 0;\r\n    let y = 0;\r\n    if (e.clientX !== undefined && e.clientY !== undefined) {\r\n      x = e.clientX;\r\n      y = e.clientY;\r\n    } else if (e.taretTouches) {\r\n      if (preventTouch) {\r\n        e.preventDefault();\r\n      }\r\n      x = e.taretTouches[0].clientX;\r\n      y = e.taretTouches[0].clientY;\r\n    } else if (e.touches) {\r\n      if (preventTouch) {\r\n        e.preventDefault();\r\n      }\r\n      x = e.touches[0].clientX;\r\n      y = e.touches[0].clientY;\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { AngularInfinityScrollDirective } from './angular-infinity-scroll.directive';\n\n\n\n@NgModule({\n  declarations: [\n    AngularInfinityScrollDirective\n  ],\n  exports: [AngularInfinityScrollDirective]\n})\nexport class AngularInfinityScrollModule { }\n","/*\n * Public API Surface of angular-infinity-scroll\n */\n\nexport * from './lib/angular-infinity-scroll.module';\nexport * from './lib/angular-infinity-scroll.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}